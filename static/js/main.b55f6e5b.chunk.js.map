{"version":3,"sources":["Components/UserProfile.js","firebase.js","Components/Sidebar.js","Components/Home.js","Components/ChatMessage.js","Components/Chatcontainer.js","Components/ChatPage.js","Components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["UserProfile","name","photoURL","email","lastMessage","navigate","useNavigate","className","onClick","emailId","src","alt","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","googleProvider","GoogleAuthProvider","Sidebar","currentUser","signOut","useState","allUsers","setAllUsers","searchInput","setSearchInput","friendList","setFriendList","useEffect","getAllUsers","a","collection","onSnapshot","snapshot","docs","filter","doc","data","getFriends","searchItem","user","fullname","toLowerCase","includes","map","id","type","placeholder","value","onChange","e","target","length","friend","Home","ChatMessage","message","time","sender","style","alignSelf","backgroundColor","Date","toDate","toLocaleString","Chatcontainer","setMessage","openEmojiBox","setOpenEmojiBox","emailID","useParams","chatUser","setChatUser","chatBox","useRef","chatMessages","setChatMessages","getUser","getMessages","orderBy","newMessage","senderEmail","receiverEmail","current","addEventListener","event","currentTarget","scroll","top","scrollHeight","behavior","send","preventDefault","payload","text","timeStamp","Timestamp","now","add","set","ref","onEmojiClick","emojiObject","emoji","onSubmit","ChatPage","Login","setUser","signInWithPopup","then","result","newUser","displayName","localStorage","setItem","JSON","stringify","catch","err","alert","App","parse","getItem","removeItem","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b55f6e5b.chunk.js","sourcesContent":["import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport \"./UserProfile.css\";\nfunction UserProfile({ name, photoURL, email, lastMessage }) {\n  const navigate = useNavigate();\n  const goToUser = (emailId) => {\n    if (emailId) {\n      navigate(`/${emailId}`);\n    }\n  };\n  return (\n    <div className=\"user-profile\" onClick={() => goToUser(email)}>\n      {/* img of user */}\n      <div className=\"user-image\">\n        <img src={photoURL} alt=\"\" />\n      </div>\n      {/* name of user */}\n      <div className=\"user-info\">\n        <p className=\"user-name\">{name}</p>\n        {lastMessage && <p className=\"user-lastmessage\">{lastMessage}</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default UserProfile;\n","import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAoaNFl57VViS-OSqJ7-E1SKQsNNIRioms\",\n  authDomain: \"whatsapp-clone-997dd.firebaseapp.com\",\n  projectId: \"whatsapp-clone-997dd\",\n  storageBucket: \"whatsapp-clone-997dd.appspot.com\",\n  messagingSenderId: \"503579530205\",\n  appId: \"1:503579530205:web:a6712d7fe1eefb7b19dc34\",\n  measurementId: \"G-F7JFVK9Q5S\",\n};\n\nconst app = firebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\n\nconst db = app.firestore();\n\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, googleProvider };\n\nexport default db;\n","import React, { useEffect, useState } from \"react\";\nimport TollIcon from \"@mui/icons-material/Toll\";\nimport InsertCommentIcon from \"@mui/icons-material/InsertComment\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport \"./Sidebar.css\";\nimport UserProfile from \"./UserProfile\";\nimport db from \"../firebase\";\nfunction Sidebar({ currentUser, signOut }) {\n  const [allUsers, setAllUsers] = useState([]);\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [friendList, setFriendList] = useState([]);\n  useEffect(() => {\n    const getAllUsers = async () => {\n      const data = await db.collection(\"users\").onSnapshot((snapshot) => {\n        setAllUsers(\n          snapshot.docs.filter((doc) => doc.data().email !== currentUser?.email)\n        );\n      });\n    };\n\n    const getFriends = async () => {\n      const data = await db\n        .collection(\"Friendlist\")\n        .doc(currentUser.email)\n        .collection(\"list\")\n        .onSnapshot((snapshot) => {\n          setFriendList(snapshot.docs);\n        });\n    };\n\n    getAllUsers();\n    getFriends();\n  }, []);\n\n  const searchedUser = allUsers.filter((user) => {\n    if (searchInput) {\n      if (\n        user.data().fullname.toLowerCase().includes(searchInput.toLowerCase())\n      ) {\n        return user;\n      }\n    }\n  });\n\n  const searchItem = searchedUser.map((user) => {\n    return (\n      <UserProfile\n        name={user.data().fullname}\n        photoURL={user.data().photoURL}\n        key={user.id}\n        email={user.data().email}\n      />\n    );\n  });\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar-header\">\n        <div className=\"sidebar-header-img\" onClick={signOut}>\n          <img src={currentUser?.photoURL} alt=\"\" />\n        </div>\n        <div className=\"sidebar-header-btn\">\n          <TollIcon />\n          <InsertCommentIcon />\n          <MoreVertIcon />\n        </div>\n      </div>\n\n      <div className=\"sidebar-search\">\n        <div className=\"sidebar-search-input\">\n          <SearchIcon />\n          <input\n            type=\"text\"\n            name=\"search\"\n            placeholder=\"Search...\"\n            value={searchInput}\n            onChange={(e) => setSearchInput(e.target.value)}\n          />\n        </div>\n      </div>\n\n      <div className=\"sidebar-chat-list\">\n        {searchItem.length > 0\n          ? searchItem\n          : friendList.map((friend) => (\n              <UserProfile\n                name={friend.data().fullname}\n                photoURL={friend.data().photoURL}\n                lastMessage={friend.data().lastMessage}\n                email={friend.data().email}\n              />\n            ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./Home.css\";\nimport Sidebar from \"./Sidebar\";\n\nfunction Home({ currentUser, signOut }) {\n  return (\n    <div className=\"home\">\n      <div className=\"home-container\">\n        {/* SideBar */}\n        <Sidebar currentUser={currentUser} signOut={signOut} />\n        {/* a container with whatsapp-logo */}\n        <div className=\"home-bg\">\n          <img src=\"./WhatsAppbg.png\" alt=\"\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { auth } from \"../firebase\";\nimport \"./ChatMessage.css\";\nfunction ChatMessage({ message, time, sender }) {\n  return (\n    <div\n      className=\"chat-message\"\n      style={{\n        alignSelf:\n          sender === auth?.currentUser?.email ? \"flex-end\" : \"flex-start\",\n\n        backgroundColor:\n          sender == auth?.currentUser?.email ? \"#dcf8c6\" : \"#fff\",\n      }}\n    >\n      <div className=\"chat-message-text\">\n        <p>{message}</p>\n      </div>\n      <div className=\"chat-message-date\">\n        <p>{new Date(time.toDate()).toLocaleString()}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatMessage;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Chatcontainer.css\";\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\nimport InsertEmoticonIcon from \"@mui/icons-material/InsertEmoticon\";\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport \"./Chatcontainer.css\";\nimport ChatMessage from \"./ChatMessage\";\nimport Picker from \"emoji-picker-react\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"../firebase\";\nimport firebase from \"firebase\";\nfunction Chatcontainer({ currentUser }) {\n  const [message, setMessage] = useState(\"\");\n  const [openEmojiBox, setOpenEmojiBox] = useState(false);\n  const { emailID } = useParams();\n  const [chatUser, setChatUser] = useState({});\n  const chatBox = useRef(null);\n  const [chatMessages, setChatMessages] = useState([]);\n  useEffect(() => {\n    const getUser = async () => {\n      const data = await db\n        .collection(\"users\")\n        .doc(emailID)\n        .onSnapshot((snapshot) => {\n          setChatUser(snapshot.data());\n        });\n    };\n\n    const getMessages = async () => {\n      const data = await db\n        .collection(\"chats\")\n        .doc(emailID)\n        .collection(\"messages\")\n        .orderBy(\"timeStamp\", \"asc\")\n        .onSnapshot((snapshot) => {\n          let messages = snapshot.docs.map((doc) => doc.data());\n\n          let newMessage = messages.filter(\n            (message) =>\n              message.senderEmail === (currentUser.email || emailID) ||\n              message.receiverEmail === (currentUser.email || emailID)\n          );\n\n          setChatMessages(newMessage);\n        });\n    };\n    getUser();\n    getMessages();\n  }, [emailID]);\n\n  useEffect(() => {\n    chatBox.current.addEventListener(\"DOMNodeInserted\", (event) => {\n      const { currentTarget: target } = event;\n      target.scroll({ top: target.scrollHeight, behavior: \"smooth\" });\n    });\n  }, [chatMessages]);\n\n  const send = (e) => {\n    e.preventDefault();\n\n    if (emailID) {\n      let payload = {\n        text: message,\n        senderEmail: currentUser.email,\n        receiverEmail: emailID,\n        timeStamp: firebase.firestore.Timestamp.now(),\n      };\n      // sender\n      db.collection(\"chats\")\n        .doc(currentUser.email)\n        .collection(\"messages\")\n        .add(payload);\n\n      // reciever\n      db.collection(\"chats\").doc(emailID).collection(\"messages\").add(payload);\n\n      db.collection(\"Friendlist\")\n        .doc(currentUser.email)\n        .collection(\"list\")\n        .doc(emailID)\n        .set({\n          email: chatUser.email,\n          fullname: chatUser.fullname,\n          photoURL: chatUser.photoURL,\n          lastMessage: message,\n        });\n\n      db.collection(\"Friendlist\")\n        .doc(emailID)\n        .collection(\"list\")\n        .doc(currentUser.email)\n        .set({\n          email: currentUser.email,\n          fullname: currentUser.fullname,\n          photoURL: currentUser.photoURL,\n          lastMessage: message,\n        });\n\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-container-header\">\n        <div className=\"chat-user-info\">\n          <div className=\"chat-user-img\">\n            <img src={chatUser?.photoURL} alt=\"\" />\n          </div>\n          <p>{chatUser?.fullname}</p>\n        </div>\n\n        <div className=\"chat-container-header-btn\">\n          <MoreVertIcon />\n        </div>\n      </div>\n\n      {/* chatdisplay-container */}\n\n      <div className=\"chat-display-container\" ref={chatBox}>\n        {chatMessages.map((message) => (\n          <ChatMessage\n            message={message.text}\n            time={message.timeStamp}\n            sender={message.senderEmail}\n          />\n        ))}\n      </div>\n      {/* chatinput */}\n\n      <div className=\"chat-input\">\n        {/* buttons */}\n        {openEmojiBox && (\n          <Picker\n            onEmojiClick={(event, emojiObject) =>\n              setMessage(message + emojiObject.emoji)\n            }\n          />\n        )}\n\n        <div className=\"chat-input-btn\">\n          <InsertEmoticonIcon onClick={() => setOpenEmojiBox(!openEmojiBox)} />\n          <AttachFileIcon />\n        </div>\n        {/* text input element */}\n        <form onSubmit={send}>\n          <input\n            type=\"text\"\n            placeholder=\"Type a Message\"\n            value={message}\n            onChange={(e) => {\n              setMessage(e.target.value);\n            }}\n          />\n        </form>\n        {/* send button */}\n        <div className=\"chat-input-send-btn\" onClick={send}>\n          <SendIcon />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chatcontainer;\n","import React from \"react\";\nimport Chatcontainer from \"./Chatcontainer\";\nimport Sidebar from \"./Sidebar\";\nimport \"./ChatPage.css\";\nfunction ChatPage({ currentUser, signOut }) {\n  return (\n    <div className=\"chatpage\">\n      <div className=\"chatpage-container\">\n        {/* sidebar */}\n        <Sidebar currentUser={currentUser} signOut={signOut} />\n        {/* chatcontainer */}\n        <Chatcontainer currentUser={currentUser} />\n      </div>\n    </div>\n  );\n}\n\nexport default ChatPage;\n","import React from \"react\";\nimport db, { auth, googleProvider } from \"../firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Login.css\";\n\nfunction Login({ setUser }) {\n  const navigate = useNavigate();\n  const signInWithGoogle = () => {\n    auth\n      .signInWithPopup(googleProvider)\n      .then((result) => {\n        const newUser = {\n          fullname: result.user.displayName,\n          email: result.user.email,\n          photoURL: result.user.photoURL,\n        };\n        navigate(\"/\");\n        setUser(newUser);\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n        db.collection(\"users\").doc(result.user.email).set(newUser);\n      })\n      .catch((err) => alert(err.message));\n  };\n\n  return (\n    <div className=\"login\">\n      <div className=\"login-container\">\n        <img className=\"login-logo\" src=\"./whatsapp-logo.png\" alt=\"\" />\n        <p className=\"login-name\">WhatsApp Web</p>\n        <button className=\"login-btn\" onClick={signInWithGoogle}>\n          <img src=\"./google-logo.png\" alt=\"login with google\" />\n          Login with Google\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\n\nimport ChatPage from \"./Components/ChatPage\";\nimport { useState } from \"react\";\nimport Login from \"./Components/Login\";\nimport { auth } from \"./firebase\";\nfunction App() {\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"user\")));\n\n  const signOut = () => {\n    auth\n      .signOut()\n      .then(() => {\n        setUser(null);\n        localStorage.removeItem(\"user\");\n      })\n      .catch((err) => alert(err.message));\n  };\n  return (\n    <Router>\n      <div className=\"App\">\n        {user ? (\n          <Routes>\n            <Route\n              path=\"/:emailID\"\n              element={<ChatPage currentUser={user} signOut={signOut} />}\n            />\n            <Route\n              path=\"/\"\n              element={<Home currentUser={user} signOut={signOut} />}\n            />\n          </Routes>\n        ) : (\n          <Login setUser={setUser} />\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}